# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package Deploy

on:
  push:
    branches: [ master ]

jobs:
  setting-up:
    name: ☁️ Setting Up
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🚀 Setting Up Deployment Package
        run: echo Process Started!!!

  java:
    name: 🔧 Java 11
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: 🔧 Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

  install:
    name: 🌱 Install
    runs-on: ubuntu-latest
    needs: [ setting-up, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Install with Maven
        run: mvn clean install

  test:
    name: 📂 Test
    runs-on: ubuntu-latest
    needs: [ install, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Test with Maven
        run: mvn test

  build:
    name: 📂 Build
    runs-on: ubuntu-latest
    needs: [ test, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  deploy:
    name: 🚀 Deploy To GitHub Packages
    runs-on: ubuntu-latest
    needs: [ java, build ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: 🚀 Publish to GitHub Packages Apache Maven
        run: mvn --batch-mode deploy -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  deploy-maven:
    name: 🚀 Deploy To Maven Central
    runs-on: ubuntu-latest
    needs: [ java, build ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      
      - id: publish-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USER_NAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_ACCESS_TOKEN }}
        run: |
          mvn \
            --no-transfer-progress \
            -Possrh
            --batch-mode \
            clean deploy
